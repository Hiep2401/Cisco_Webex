import requestsimport jsonimport infor# Xác thực tài khoản đã tạodef Authentication():    access_token = infor.access_token    url = infor.host + 'people'    headers = {        "Authorization" : "Bearer " + access_token    }    response = requests.get(url, headers=headers)    print(response)    #print(response.json())    print(json.dumps(response.json(), indent=4))# Quản lý một tài khoản với email cụ thể và trả về id của nódef Manage_People():    access_token = infor.access_token    url = infor.host + 'people'    headers = {        "Authorization": "Bearer " + access_token,        "Content-Type": "application/json"    }    params = {        "email" : "huynhhuuhiep10cbnc2@gmail.com"    }    response = requests.get(url, headers=headers, params=params)    #print(json.dumps(response.json(), indent=4))    data = response.json()    person_id = data['items'][0]['id']    return person_id# Quản lý danh sách với id đã trả về ở hàm Manage_People()def List_people():    access_token = infor.access_token    url = infor.host + "people/" + Manage_People()    headers = {        "Authorization": "Bearer " + access_token,        "Content-Type": "application/json"    }    response = requests.get(url, headers=headers)    print(json.dumps(response.json(), indent=4))# Trả về danh sách tất cả các phòng hiện có và sau đó trả về 1 id phòng cụ thểdef Manage_Rooms():    access_token = infor.access_token    url = infor.host + "rooms"    headers = {        "Authorization": "Bearer " + access_token,        "Content-Type": "application/json"    }    params = {        "max" : "100"    }    response = requests.get(url, headers=headers, params=params)    data = response.json()    num_id = len(data['items'])    # for i in range(num_id):    #     room_id = data['items'][i]['id']    #     print(room_id)    #print(json.dumps(response.json(), indent=4))    return data['items'][0]['id']# Hàm để tạo một phòng mới và lấy id phòng đã tạodef Create_Room():    access_token = infor.access_token    url = infor.host + "rooms"    headers = {        "Authorization": "Bearer " + access_token,        "Content-Type": "application/json"    }    body = json.dumps({        "title": "HiepHiep!"    })    response = requests.post(url, headers=headers, data=body)    # print(response)    # print(json.dumps(response.json(), indent=4))    data = response.json()    return data['id']# Truy xuất thông tin cụ thể của 1 phòng ( mà ở đây là phòng mới được tạo)def Room_details():    access_token = infor.access_token    room_id = Create_Room()    url = f"{infor.host}rooms/{room_id}/meetingInfo"    headers = {        "Authorization": "Bearer " + access_token,        "Content-Type": "application/json"    }    response = requests.get(url, headers=headers)    print(json.dumps(response.json(), indent=4))# Lấy danh dách các list membership đã códef Manage_List_membership():    access_token = infor.access_token    room_id = Manage_Rooms()    url = infor.host + "memberships"    headers = {        "Authorization": "Bearer " + access_token,        "Content-Type": "application/json"    }    params = {        "roomId": room_id    }    response = requests.get(url, headers=headers, params=params)    print(json.dumps(response.json(), indent=4))# Add thêm người vào cuộc trò chuyện với person_email đã cung cấpdef Create_membership():    access_token = infor.access_token    room_id = Manage_Rooms()    person_email = "huuhiep@webex.bot"    url = infor.host + "memberships"    headers = {        "Authorization": "Bearer " + access_token,        "Content-Type": "application/json"    }    params = {        "roomId": room_id,        "personEmail" : person_email,    }    response = requests.post(url, headers=headers, json=params)    print(response)    print(json.dumps(response.json(), indent=4))# Thực hiện gửi tin nhắn với room_id đã códef Manage_Send_Message():    access_token = infor.access_token    room_id = Manage_Rooms()    message = "Hello Anh thich em lam uay uay"    url = infor.host + "messages"    headers = {        "Authorization": "Bearer " + access_token,        "Content-Type": "application/json"    }    params = {        "roomId": room_id,        "markdown": message,    }    response = requests.post(url, headers=headers, json=params)    print(response)    print(json.dumps(response.json(), indent=4))if __name__ == "__main__":    # Authentication()    # Manage_People()    # List_people()    # Manage_Rooms()    # Create_Room()    # Room_details()    # Manage_List_membership()    # Create_membership()     Manage_Send_Message()